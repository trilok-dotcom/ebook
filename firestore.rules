rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get user role
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read/write their own document
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
      
      // Any authenticated user can read any user profile (for lookups)
      // This allows doctors to find patients and patients to find doctors
      allow read: if request.auth != null;
    }
    
    // Records collection - doctors can create/update/delete their uploads, 
    // both doctor and assigned patient can read
    match /records/{recordId} {
      // Any authenticated user can create records
      allow create: if request.auth != null;
      
      // Doctor who uploaded OR assigned patient can read
      allow read: if request.auth != null && (
        resource.data.uploadedFor == request.auth.uid ||
        resource.data.uploadedBy == request.auth.uid
      );
      
      // Only doctor who uploaded can update or delete
      allow update, delete: if request.auth != null 
                            && request.auth.uid == resource.data.uploadedBy;
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      // Patients can create appointments
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.patientId
                    && getUserRole() == 'patient';
      
      // Doctor or patient involved can read
      allow read: if request.auth != null && (
        resource.data.doctorId == request.auth.uid ||
        resource.data.patientId == request.auth.uid
      );
      
      // Doctor can update appointment (approve/reject/complete)
      // Patient can cancel their own appointment
      allow update: if request.auth != null && (
        (resource.data.doctorId == request.auth.uid && getUserRole() == 'doctor') ||
        (resource.data.patientId == request.auth.uid && getUserRole() == 'patient' && 
         request.resource.data.status == 'cancelled')
      );
      
      // Only patient who created can delete (before approval)
      allow delete: if request.auth != null 
                    && request.auth.uid == resource.data.patientId
                    && resource.data.status == 'pending';
    }
  }
}
